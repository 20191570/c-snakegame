#include <ncurses.h>
#include <iostream>
#include <unistd.h>
using namespace std;

int main(){
  int map_arr[21][21] = {
    {2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2},
    {1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
    {2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2},
  };
  int cnt = 0;
  setlocale(LC_ALL, "");
  initscr();
  keypad(stdscr, TRUE);
  curs_set(0);
  noecho();
  int x = 1;
  int y = 1;
  while(true){
    for(int i = 0;i<21;i++){
      for(int j = 0;j<21;j++){
        if(map_arr[i][j] == 2 or map_arr[i][j] == 3){
          mvprintw(i,j,"\u2B1B");
        }
        else if(map_arr[i][j] == 1){
          mvprintw(i,j,"\u2B1C");
        }
        else{
          mvprintw(i,j," ");
        }
      }
    }
    int key = getch();
    if(key == KEY_UP){
      map_arr[y][x] = 0;
      y--;
      map_arr[y][x] = 3;
    }
    else if(key == KEY_DOWN){
      map_arr[y][x] = 0;
      y++;
      map_arr[y][x] = 3;
    }
    else if(key == KEY_LEFT){
      map_arr[y][x] = 0;
      x--;
      map_arr[y][x] = 3;
    }
    else if(key == KEY_RIGHT){
      map_arr[y][x] = 0;
      x++;
      map_arr[y][x] = 3;
    }
    refresh();
    usleep(500);
  }
  getch();
  endwin();
  return 0;
}
